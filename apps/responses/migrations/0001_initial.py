# Generated by Django 5.0.6 on 2025-09-09 19:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('abandoned', 'Abandoned'), ('paused', 'Paused')], default='active', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity_at', models.DateTimeField(auto_now=True)),
                ('agenda_version_hash', models.CharField(help_text='Hash of agenda content when session started', max_length=64)),
                ('agenda_snapshot', models.JSONField(help_text='Full agenda at time of session start')),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('total_questions', models.IntegerField()),
                ('answered_questions', models.IntegerField(default=0)),
                ('character_used', models.CharField(default='minu', max_length=50)),
                ('session_notes', models.TextField(blank=True, help_text='AI-generated summary')),
                ('schema_outdated', models.BooleanField(default=False, help_text='True if agenda has changed since session start')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_number', models.IntegerField(help_text='1, 2, 3, etc.')),
                ('question_id', models.CharField(help_text='career_aspirations, goal_priorities, etc.', max_length=100)),
                ('question_text', models.TextField(help_text='Store actual question asked')),
                ('raw_response', models.TextField(help_text="User's raw input")),
                ('processed_response', models.TextField(help_text='AI-processed/formatted response')),
                ('response_metadata', models.JSONField(default=dict, help_text='Additional structured data')),
                ('status', models.CharField(choices=[('partial', 'Partial'), ('complete', 'Complete'), ('skipped', 'Skipped'), ('invalid', 'Invalid')], default='partial', max_length=20)),
                ('first_response_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('response_quality_score', models.FloatField(blank=True, null=True)),
                ('ai_analysis', models.TextField(blank=True, help_text='AI insights about the response')),
                ('follow_up_needed', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='responses.coursesession')),
            ],
            options={
                'ordering': ['question_number'],
            },
        ),
        migrations.CreateModel(
            name='ConversationTurn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_number', models.IntegerField()),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant')], max_length=20)),
                ('content', models.TextField()),
                ('emote', models.CharField(blank=True, max_length=50)),
                ('quick_inputs', models.JSONField(default=list)),
                ('system_data', models.JSONField(default=dict, help_text='active_item, completed_item, etc.')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation', to='responses.coursesession')),
                ('question_context', models.ForeignKey(blank=True, help_text='Question this turn relates to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='responses.questionresponse')),
            ],
            options={
                'ordering': ['turn_number'],
            },
        ),
        migrations.AddIndex(
            model_name='coursesession',
            index=models.Index(fields=['user', 'course', 'status'], name='responses_c_user_id_9449ac_idx'),
        ),
        migrations.AddIndex(
            model_name='coursesession',
            index=models.Index(fields=['status', 'last_activity_at'], name='responses_c_status_107f2b_idx'),
        ),
        migrations.AddIndex(
            model_name='coursesession',
            index=models.Index(fields=['user', 'status'], name='responses_c_user_id_2deb68_idx'),
        ),
        migrations.AddIndex(
            model_name='questionresponse',
            index=models.Index(fields=['session', 'status'], name='responses_q_session_fb9d67_idx'),
        ),
        migrations.AddIndex(
            model_name='questionresponse',
            index=models.Index(fields=['question_id', 'status'], name='responses_q_questio_f55fb8_idx'),
        ),
        migrations.AddIndex(
            model_name='questionresponse',
            index=models.Index(fields=['session', 'question_number'], name='responses_q_session_f33f62_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='questionresponse',
            unique_together={('session', 'question_number')},
        ),
        migrations.AddIndex(
            model_name='conversationturn',
            index=models.Index(fields=['session', 'turn_number'], name='responses_c_session_34eb8b_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationturn',
            index=models.Index(fields=['session', 'role'], name='responses_c_session_af068c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationturn',
            unique_together={('session', 'turn_number')},
        ),
    ]
